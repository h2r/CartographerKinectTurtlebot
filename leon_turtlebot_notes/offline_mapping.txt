OFFLINE MAPPING
###############################

Offline mapping is done using a rosbag. Essentially, run the same programs in the terminal (gmapping or cartographer) but this time, the data that the topics receive comes from the rosbag rather than the Turtlebot publishing the data live. Advantage is that we can perform experiments by changing only one variable at a time (e.g. changing the scan range in cartographer), and also that we can slow down the rate of playback so we can get the most accurate possible maps.

###############################

You should have a rosbag ready.

Now, to generate the .pgm and .yaml files, go to where you saved the bag file and do the following (make sure to kill everything first):
roscore

If you want to use GMapping, do this:
rosparam set use_sim_time true
rosrun gmapping slam_gmapping scan:=scan

If you want to use Cartographer, do this:
export TURTLEBOT_SIMULATION=true # need to be true for rosbag, false, for live. Default is false.
roslaunch cartographer_turtlebot turtlebot_urg_lidar_2d.launch

You'll note that the commands for building a map are basically the same as the commands for online--the only difference is that we're using a rosbag instead of live data.

Regardless of whether or not you're using GMapping or Cartographer, in a separate terminal run:
rosparam set use_sim_time true # note: this might not be totally necessary because we did this in another terminal but I'm keeping it here in case it does
rosbag play --clock <BAG_FILENAME>

After the bag is done playing:
rosrun map_server map_saver -f <map_name>
which gives the .pgm and .yaml file of name map_name, saved to your current directory.

###############################

Files:
navigation.pgm, navigation.yaml-- files generated from the navigation.bag file.